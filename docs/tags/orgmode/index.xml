<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>orgmode on patrolli</title>
    <link>https://patrolli.github.io/xssq/tags/orgmode/</link>
    <description>Recent content in orgmode on patrolli</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 20 Apr 2021 00:21:19 +0800</lastBuildDate>
    
	<atom:link href="https://patrolli.github.io/xssq/tags/orgmode/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>org 整理 paper_index</title>
      <link>https://patrolli.github.io/xssq/post/org_%E6%95%B4%E7%90%86_paper_index/</link>
      <pubDate>Tue, 20 Apr 2021 00:21:19 +0800</pubDate>
      
      <guid>https://patrolli.github.io/xssq/post/org_%E6%95%B4%E7%90%86_paper_index/</guid>
      <description>Intro 花了一些时间用 elisp 写了一个函数，将 paper-index 中维护的论文索引按照他们的 tag 来进行分组。之前我是对每篇论文用一个一级 headline 进行维护，然后插入对应的 tag, 但这样做</description>
    </item>
    
    <item>
      <title>hugo&amp;org-mode&amp;ox-hugo 的博客工作流</title>
      <link>https://patrolli.github.io/xssq/post/hugo-workflow/</link>
      <pubDate>Thu, 11 Feb 2021 17:51:00 +0800</pubDate>
      
      <guid>https://patrolli.github.io/xssq/post/hugo-workflow/</guid>
      <description>两种工作流 ox-hugo 有两种 work-flow: 一种是 one-post-per-subtree, 另一种是 one-post-per-file. ox-hugo 起到的作用实际是将我们写的 org 文件导出成 md, 并且生成 hugo 需要的 md 头文件信息，例如： 1 2 3 4 5 6 +++ title = &amp;#34;hugo&amp;amp;org-mode&amp;amp;ox-hugo 的博</description>
    </item>
    
  </channel>
</rss>